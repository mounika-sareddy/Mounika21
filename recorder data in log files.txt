import java.util.*;

public class ReorderLogs {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        // Read the number of logs
        System.out.print("Enter number of logs: ");
        int n = Integer.parseInt(sc.nextLine());
        
        String[] logs = new String[n];
        System.out.println("Enter logs one per line:");
        for (int i = 0; i < n; i++) {
            logs[i] = sc.nextLine();
        }
        
        String[] reordered = reorderLogFiles(logs);
        
        System.out.println("Reordered logs:");
        for (String log : reordered) {
            System.out.println(log);
        }
    }
    
    public static String[] reorderLogFiles(String[] logs) {
        List<String> letterLogs = new ArrayList<>();
        List<String> digitLogs = new ArrayList<>();
        
        for (String log : logs) {
            // Split into identifier and rest of the log
            int firstSpace = log.indexOf(' ');
            String identifier = log.substring(0, firstSpace);
            String content = log.substring(firstSpace + 1);
            
            // Check if letter-log or digit-log by checking first char of content
            if (Character.isDigit(content.charAt(0))) {
                digitLogs.add(log);
            } else {
                letterLogs.add(log);
            }
        }
        
        // Sort letter logs by content, then by identifier
        Collections.sort(letterLogs, new Comparator<String>() {
            public int compare(String log1, String log2) {
                int i1 = log1.indexOf(' ');
                int i2 = log2.indexOf(' ');
                
                String id1 = log1.substring(0, i1);
                String id2 = log2.substring(0, i2);
                
                String content1 = log1.substring(i1 + 1);
                String content2 = log2.substring(i2 + 1);
                
                int cmp = content1.compareTo(content2);
                if (cmp != 0) {
                    return cmp;
                }
                return id1.compareTo(id2);
            }
        });
        
        // Combine letter logs followed by digit logs
        String[] result = new String[logs.length];
        int index = 0;
        
        for (String log : letterLogs) {
            result[index++] = log;
        }
        for (String log : digitLogs) {
            result[index++] = log;
        }
        
        return result;
    }
}
